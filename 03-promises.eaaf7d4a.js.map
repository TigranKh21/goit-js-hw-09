{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GACTC,KAAKC,SAAW,GAEpCN,EAAAO,OAAOC,QAAQ,uBAAqBL,QAAiBC,OAErDJ,EAAAO,OAAOE,QAAQ,sBAAoBN,QAAeC,M,CAItD,MAAMM,EAAUC,SAASC,cAAc,kBACjCC,EAASF,SAASC,cAAc,iBAChCE,EAAWH,SAASC,cAAc,mBACtBD,SAASC,cAAc,UAE/BG,iBAAiB,SAE3B,SAAqBC,GACnBA,EAAMC,iBACN,MAAMb,EAAQc,OAAOR,EAAQS,OACvBC,EAAOF,OAAOL,EAAOM,OACrBE,EAASH,OAAOJ,EAASK,OAC/B,IAAIG,EAAU,EAEdC,QAAQC,KAAI,IAAIC,MAAOC,cAEvBC,YAAW,KACTJ,QAAQC,KAAI,IAAIC,MAAOC,cACvBxB,EAAcoB,EAASlB,GACvBkB,IACAC,QAAQC,IACN,WAAWpB,aAAiBgB,eAAkBC,gBAC5CC,EAAU,IAEb,GACAlB,GAEH,MAAMwB,EAAaC,aAAY,KAC7BN,QAAQC,KAAI,IAAIC,MAAOC,cACvBxB,EAAcoB,EAASF,GACvBE,IACAC,QAAQC,IACN,WAAWpB,aAAiBgB,eAAkBC,gBAC5CC,EAAU,KAGVA,IAAYD,EAAS,GACvBS,cAAcF,EAAW,GAE1BR,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  } else {\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  }\n}\n\nconst delayEl = document.querySelector('[name=\"delay\"]');\nconst stepEl = document.querySelector('[name=\"step\"]');\nconst amountEl = document.querySelector('[name=\"amount\"]');\nconst createBtn = document.querySelector('button');\n\ncreateBtn.addEventListener('click', onCreateBtn);\n\nfunction onCreateBtn(event) {\n  event.preventDefault();\n  const delay = Number(delayEl.value);\n  const step = Number(stepEl.value);\n  const amount = Number(amountEl.value);\n  let counter = 1;\n\n  console.log(new Date().getSeconds());\n\n  setTimeout(() => {\n    console.log(new Date().getSeconds());\n    createPromise(counter, delay);\n    counter++;\n    console.log(\n      `delay = ${delay}, step = ${step}, amount = ${amount}, counter = ${\n        counter - 1\n      }`\n    );\n  }, delay);\n\n  const intervalId = setInterval(() => {\n    console.log(new Date().getSeconds());\n    createPromise(counter, step);\n    counter++;\n    console.log(\n      `delay = ${delay}, step = ${step}, amount = ${amount}, counter = ${\n        counter - 1\n      }`\n    );\n    if (counter === amount + 1) {\n      clearInterval(intervalId);\n    }\n  }, step);\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Math","random","Notify","success","failure","$47d4ff9957288465$var$delayEl","document","querySelector","$47d4ff9957288465$var$stepEl","$47d4ff9957288465$var$amountEl","addEventListener","event","preventDefault","Number","value","step","amount","counter","console","log","Date","getSeconds","setTimeout","intervalId","setInterval","clearInterval"],"version":3,"file":"03-promises.eaaf7d4a.js.map"}